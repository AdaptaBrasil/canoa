#spell:ignore onclick jinja apikey bingint vw_sepcombined andrade inpe nginx getusermail passwordrecovery changepassword resetpassword
#spell:ignore desloga sepcombined especificacaosetor suporteusuariogrupo suporteusuarioelemento tmpl wtforms getuseremail getusermail requestemail
#spell:ignore venv ccedil atilde receivefile datetime saude mgmt uix
#spell:ignore Setorista sendgrid linux
TODO:


    2024-09-
        a. β 2.17
        b. sent email with errors
        c. replace db_helper.persist_record with Users.update
        d. if template not ready use Error Template
        e. Always send Success & Error message to forms, if error -> alert -> close -> [!] -> display again
        f. Standardize css class names as my-class-name
        0. About title
        1. β 2.17
        2. Set User Name in e-mail
        3. Wait for process on forms.
        4. Require actual/current pw to be able to change pw, changepassword user `timer`
        5. Install on Windows server with Hunspell
        6. Add exception message to the forms (alert)
        7. Test error on authentication process: error on start (no Form)
        7. Avoid user's simultaneous validation
        8. <form action="{{ url_for('handle_click') }}" method="post/get"><button type="submit">Go to Other Location</button></form> instead of href=
        9. β 2.17
        A. User's information UI
        B. Standardize ui messages with db (eg password_*)
        C. password_recovery, align left form text
        D. The recipient of the email must be different from CC (and perhaps from BCC as well)
        E. β 2.17
        F. β 2.17
        G. β 2.11
        H. try_get_mgd_msg -> create [^|f(msg_code, ar1, arg2)default msg|^] -> search 'msg_code' in uiTexts
        I. One close button for: document.html.j2, dialog.html.j2, form.html.j2 (2024.11.19)
        J. PrivateDocs for About (2024.11.19)


    ##Small Tasks##
        - init_form_vars create a 'error tmpl'
        - check use o form-main-btn in *.j2
        - share jinja_cache templates + texts (see route_helper templates_found)
        - Login Remember not always working
        - Tmpl for error Internal Error
        - Display colors
        - Smart menu (always, modified)
        - Share form..htm.j2 and document.htm.j2 main button



-----------------------------------------------------------
  Logbook
  Atualizar versão em: BaseConfig.py
-----------------------------------------------------------

TODO:
2025-0- β 4.x
    - [Gestão de SE] (para usuários Setorista)
        > Mostrar um grid com 3 colunas
            [Arquivo Submetido], [Relatório], [Data], [Disponível] (se o arquivo ainda está disponível)
            Permitir fazer download do arquivos submetidos e relatórios

    - Menu to DB
    - sep_edit detected if form's input changed (don't update)
    - mudar erro 500
    - [Sair:x] não fecha ok.
    - Menu responsive
    - remove pixel.css (simply css's)



------- 2025 - January-- ---------
----------------------------------

2025-01-09 β 3.4 Windows stable version


2025-01-09 Fixing file loss from last repair
    - tasks.json
    - email_helper.py
    - sendgrid_helper.py
    - sep_mgmt.py

    This commit was lost:
    -- For Windows & Linux -b
    2024-12-23 β 3.39 fixes for Win & Linux
        - `launch.json` file that was committed with a secret,
        difficult do fix.
        - new file tasks.json (win)
        - new file with envvars .Canoa\..\..\prepareEnviron.bat
        - new class RecipientsListStr
        - new class RecipientsDic
        - del settings.json
        - new envvar EMAIL_REPORT_CC
        - ~8 minor fixes


2025-01-09 Fixes for git
    - `launch.json` file that was *locally* committed with a secret.
       Hard work to fix.


------- 2024 - December ----------
----------------------------------

-- For Windows
2024-12-21 β 3.38 fixes for Windows
    - Fix bug in Linux (works in Windows!) in carranca\templates\private\sep_mgmt.html.j2 {{gridSubmitID}}
    - Sending e-mail in Windows (a general fix to work with Linux also)
    - email_helper.py -> sendgrid_helper.py (sendgrid functions)
    - new file: email_helper.py  with generic email functions
    - new file: app_constants.py (finally a good solution)
    - new envvar EMAIL_REPORT_CC  (hide emails)
    - envvars went to launch.json file (remove from Windows' envvars)
    - create class RecipientsListDic & type RecipientsListStr
    - 12 minor fixes

-- For Linux
2024-12-20 β 3.37 fixes for Linux
    - Sending e-mail in Linux, not in Windows

-- For Linux
2024-12-19 β 3.36 for linux-r.txt
    - Requirements for Linux
      Not the same versions as for Windows

-- Published in Win
2024-12-05 β 3.35 args user, file & sector for data_validate
    - Now data_validate is called with new arguments
        user, file & sector for data_validate


-- Published in Win
2024-12-05 β 3.34 fix Windows bug in Display.py
    - Fix a Windows pre v10 bug in Display.py

------- 2024 - November ----------
----------------------------------

-- Published in Win
2024-11-26 β 3.33 fix form/doc
    - make form..htm.j2 and document.htm.j2
        have equivalent button
        TODO: make them the same button



-- Published in Win
2024-11-26 β 3.32 several minor fixes
    - Fixed templates bug (g, About {{ app_version }})
    - Use same pallet form dialog/forms colors (based in sepia):
      https://www.colorhexa.com/704214
    - New columns users: password_failures, password_failed_at
    - Set users.email_confirmed after reset pw (if user received token => confirmed)
    - New static_route


2024-11-24..25 β 3.31
    - Try to fix the 'big zip' file (se_saude_07_08)...
    - Start a 'on progress' msg for form submission


-- Published in Win
2024-11-20..23 β 3.30 ----- mudou dezena!
    - [Gestão de SE] (para usuários Adm) 100%
    - Debug geral.
    - Fix possible bug in db_helper.py Session() without close()
    - Obsolete views/functions (deleted form db)
       . sep__on_ins_upd_del.sql
       . sep_on_ins_upd_del.sql
       . generate_vw_sepcombined.sql
         (This procedure will create or recreate the view  `vw_sepcombined` in `canoa` schema from vw_schema.)


2024-11-19 β 3.22 Ícone no grid 50%
    - New column user_data_files.sep_id
      . atualizada no processo de validação:
      . new process version "2024.10.22"

    - Após mudar o svg do sep, apagar arquivo cache

    - Mostrar o "ícone" do SE 'ativo':
        . no menu principal
        . nos formulários [Validar Dados], [Edição de SE]
        . no cabeçalho do grid de [Gestão de SE]


2024-11-18 β 3.21
    - Implementations from today's meeting:
        > [Validar Dados]: ok
        > [Gestão de SEP] (para o Adm)
            o Botão: "Gestão de SEPs" -> Gestão de SE
            o Titulo: "Gestão de SEP" -> Gestão de Setores Estratégicos
        > [Edição de SE]
            o Label de Nome: "Identificação" -> Identificação (Esquema/SE)
    - sep_mgmt texts to DB


2024-11-16,17 β 3.20
    - Sep Icon display on [Validar dados] & [Editar SE]

2024-11-14,15 β 3.19
    - Ícones de Sep:
      . upload, save to db, save to hd, show as icon, defaults

2024-11-12,13 β 3.18
    - Update image of table 'sep'

2024-11-12,13 β 3.17
    - Update table 'sep' (image not ready)
    - New add_msg_fatal
    - Image is svg

2024-11-09 β 3.16 All requests made during the demo, done ;-)
    - Significantly improve custom database exceptions
       see py_helper.try_get_mgd_msg
    - Trigger `vw_mgmt_user_sep__on_upd` ready
    - Tests performed
    - e-mail texts updated (estará -> está)

2024-11-08 β 3.15 After demonstrating the app to the team (step1)
    - Display scheme/sep on grid
    - Redo db helpers views to scheme/sep
    - Adapt Trigger to scheme/sep

2024-11-07 β 3.14
    - Log process to file
    - Database v5, enters correction fase
    - sep_mgmt v5, enters correction fase
    - sep_edit v1, displays form, DB ready


2024-11-06 β 3.13
    - Database v4,
        To assist sending email:
        . new view vw_mgmt_email_sep
        . new cols in log_user_sep
    - sep_mgmt v4

2024-11-05 β 3.12
    - Database v3, sep + log  new columns, uix's, search_name -> name_lower
    - sep_mgmt v3


2024-11-01, 04 β 3.11
    - profile_mgmt -> sep_mgmt
    - sep_mgmt v2
    - sep_mgmt has info
    - navigation.html -> menu.html
    - TODO return de error (com os dados do grid) e msg de ok

------- 2024 - October -----------
----------------------------------

2024-10-31 β 3.10
    - Grid, save SEP 100, Log 100%

2024-10-28,31 β 3.9 a, b
    - Grid, save SEP 90%, db ready, remove config.SERVER_NAME

2024-10-25 β 3.8
    - Grid, save SEP 60%

2024-10-24 β 3.7
    - Grid, save SEP 20%

2024-10-24 β 3.6
    - Grid, add/edit SEP 90%

2024-10-23 β 3.5
    - Grid, add/edit SEP 60%, sidekick

2024-10-22 β 3.4
    - Grid, Demo db

2024-10-21 β 3.3
    - Grid, Demo ajustes

2024-10-21 β 3.2
    - Grid, new requirements.txt

2024-10-21 β 3.1
    - Grid, Demo o único que funciona :—(

2024-10-21 β 3.0
    - Grid, Demo

2024-10-20 β 2.40
    - Grid, part 2

2024-10-18--19 β 2.39
    - Grid, part 1

2024-10-17 β 2.38
    - Utilizar Flask.g

2024-10-14--16 β 2.37
    - process version 2024.10.16
    - n checks of repeated submissions

2024-10-12 β 2.36
    - process revised because a bug in a second successive submission
    - process version 2024.10.12_b

2024-10-10,11 β 2.35
    - profile demo
    - check se_saude_07_08.zip

2024-10-09 β 2.34
    - new profile_management route

2024-10-08 β 2.33
    - new Session per model

2024-10-07 β 2.32
    - app is running, all menu items are working
     local file is validated.

2024-10-05 β 2.31
    - app is running

2024-10-04 β 2.30
    - app is still not fully running :–(
        app is running, but seems that has no routes.
    - main.py is Application Factory Pattern
        but never is __main__

2024-10-04 β 2.29
    - app is still not running :–(
    - create_app is defines in __init__.py is only
    - create_app calls 'igniter'

2024-10-01--04 β 2.28
    - app not running :–(
    - __init__.py now 'ignites' the starting class
    - Args new Class
    - the igniter.py is almost ready (all main.py)


------- 2024 - September ---------
----------------------------------

2024-09-30 β 2.27
    - __init__.py is now create_app.py
    - main.py in now __init__.py (perhaps it will be divided in smaller pieces)
    - carranca is the main app package.


2024-09-29 β 2.26
    - main.py in carranca folder
    - main.py correctly executed
    - Flask stops with: `No module named main`

2024-09-26 β 2.25
    - Before moving main.py to carranca folder
      The project stop running. __name__ inside main.py is 'main'.


2024-09-26 β 2.24
    - Ready for db-refactoring

2024-09-26 β 2.23
    - move __init__.py [db] to shared.py
      config_receive_file.py -> config_validate_process.py

2024-09-26 β 2.22
    - pre db-refactoring

2024-09-25 β 2.22
    - Rename StorageInfo to ProcessData (si -> pd)
    - Rename folder carranca\private\upload_files to validate_process


2024-09-25 β 2.21
    - check file_origin field
    - Problem when Inserting a row in UserDataFiles after a connection
      timeout, crate UserDataFiles.insert()
    - Add pool_pre_ping=True tu connection


2024-09-24 β 2.20
    - Fix typo in run_validate.bat
    - Some comments & fixes in dwnLd_goo_helper.py
      for GoogleDrive download (My gd credential vanished)


--------- 2024 - August ----------
----------------------------------

2024-08-24 β 2.19
    - Fix msg_error in submit.py

2024-08-24 β 2.18
    - Display app version on startup

2024-08-24 β 2.17
    - issues:
        a. Erros in check.py generates an internal error.
        1. Check upload/email.py html body, email_sent_at
        9. Events Log
        E. Use a variable ~for~ to accept .zip
        F. Change cargo.report_ready_at to validate_end_at
    - Now process downloaded and uploaded files
    - DB table [user_data_files] new columns datetime for each module

2024-08-23 β 2.16
    - uploadFile -> receivefile
    - upload_file -> receive_file
    - Adjusting `process` to both type of files,
      download aware:
        - check.py


2024-08-22 β 2.15
    - Download load public compressed files from Google Drive 100%
    - Prepare UploadFile Form to include Google Drive link
    - Upload Form validation for url or local file

2024-08-19 β 2.14
    - Fixed branch issue (a 'new branch 'appeared in git,
        my work was divided into ann lost some code and
        time to merge it correctly)

2024-08-14 β 2.13
    - Download public files from url
    - Download load public files (*not* compressed) from Google Drive
    - Download load public compressed files from Google Drive 80%


----------- 2024 - July ----------
----------------------------------

2024-07-30 vβ 2.12
    - New  [About]  x
    - Google Drive download 1
    - Google Drive download 2  x

2024-07-30 vβ 2.11
    - issues:
        G run.bat goes to data_tunnel
    - Remove ellipses from  [Especifica&ccedil;&atilde;o]


2024-07-30 vβ 2.10
    - Bugs introduced on vβ 2.9:
        from file_helper import file_full_name_parse
        =>
        from .file_helper import file_full_name_parse

2024-07-30 vβ 2.9
    - Submit module now sends Validator path to script
    - Updated and renamed scripts: run_validate.bat|sh (previously run.bat|sh)
    - From now, run_validate.bat|sh goes to `data_tunnel`
    - Original run_validate.bat|sh is one level up of `carranca` folder:
        if data_tunnel copy it's missing or old, the original one
        is used to copy/update
    - Start using `app_log` during process
    - Login name can be Name or Email (adjusted input max len)
    - The filename can be changed by `secure_filename` (see check.py)

2024-07-26 vβ 2.8 (to test, use last version July/23)
    - Several adjustments to call data_validate from the common folder

2024-07-25 vβ 2.7
    - Set the [Especificação] button as an external link in new tab
    - Set some hints on the navigation buttons for evaluation purposes [<a title='hint']
    - Set correctly the accept attribute on the input tag of Upload file (accept = .zip)
    - Define the possibility of adding several CCs to the e-mail

2024-07-22 vβ 2.6
    - Change text in ui.items[uploadFileSuccess]
    - Add [Especificação] button in navigation.html
    - New shared.py (reorder main.py)
    - Fix a bug on html_helper.py
    - Finalize display_html.py

2024-07-07 vβ 2.5
    Fix ?

2024-07-05 vβ 2.4
    Fix typo in last push

2024-07-05 vβ 2.3
    DV flag `--no-spellchecker` when is Windows

--no-spellchecker
2024-07-05 vβ 2.2
    Fix bug Call func instead of const

2024-07-04 vβ 2.1
    Fix bug when empty ('') argument sent to data_validate
    New user_data_files.from_os char(1) column (W/L)
    New background img for Windows `canoa_fundo-w.jpeg`

2024-07-04 vβ 2.0
    Prepared to run all modules (in Linux)

2024-07-04 vβ 1.9
    New bash scripts:
        - rema.sh     starts `rowing` the Canoe
        - test_dv.sh  runs a simulation of a Canoa call to data_validate
        - run.sh      script call by data_validate

2024-07-04 vβ 1.8
    1. Fixing bug, file:upload_file.py
        [get_user_receipt(file_ticket)] was before [if error_code == 0:]
        so [file_ticket] can be empty (error_code != 0) that will generate
        an error in
         ticket.split.split in file:user_helper.py

2024-07.01 v β 1.7d
    1. Windows -> Linux

2024-07.01 v β 1.7c
    1. Linux -> Windows

2024-07.01 v β 1.7b
    1. Fixed for Windows, sending to Linux to check

2024-07.01 v β 1.7
    1. Fixed for Linux, sending to Windows to check

----------- 2024 - June ----------
----------------------------------

2024-06-22 v β 1.6
    1.  Check all wtForms validators (create app_config.LenFor.name & pw)
          RegisterForm had no min size for `name` but LoginForm did.
          So a user who registered with a short (<6) name couldn't login.
    2.  Create wtf_helper.py and jinja_helper.py: class LenFor
    3.  Register ui_text `invalidPassword` & `InvalidUserName` :-O
    4.  Following the recommendation from
            https://wtforms.readthedocs.io/en/master/validators/#wtforms.validators.DataRequired

            wtForms's DataRequired() -> InputRequired()
            _Unless a very specific reason exists, we recommend using the InputRequired instead._
    5.  As far as I check, EqualTo runs on the server. Using mine.
           https://wtforms.readthedocs.io/en/3.0.x/validators/?highlight=equa#wtforms.validators.EqualTo:
    6.  Start process_pre_templates (New jinja_helper.py)
    7.  Document what I learn todas documenting_python_code.md


2024-06-19 v β 1.5
    1. Fixed circular import on server and other small bugs

2024-06-19 v β 1.4
    1. Fixing circular import on server

2024-06-19 v β 1.3
    1. Fixing circular import on server

2024-06-19 v β 1.2
    1. Fixing circular import on server

2024-06-19 v β 1.1
    1. Fixing circular import on server

2024-06-17..19 v β 1.0
    1. Check every `db.query` to see if returns records before .first()
    2. Rollback all session.commit() on every Exception
    3. Standardize vars/defs (almost all)
    4. Send email with html
    5. do_password_reset task_code,

2024-06-14,15 v α51b
    1. Continuar user_receipt e ajustes

2024-06-13,14 v α51a
    1. New ticket size (user_receipt)
    2. new texts for upload

2024-06-07 v α50
    1. Jinja2's filter ready!
    2. Fix HTML documents display
    3. New About()

2024-06-07 v α49
    1. If data_validate 'fails' but produces a report,
       record the error in user_data_files and continue.
    2. Create jinja2 Filter for common functions (see __init__.py)

2024-06-07 v α49
    1. Print error msg if user registration fails (TODO: LOG)

2024-06-07 v α48
    1. Fix the user registration process (Errors: defs, table, columns :-O)

2024-06-05 v α47
    1. Fixes for the Win Server

2024-06-05 v α46
    1. Send email with CC to @pedro-andrade-inpe when data_validate
       Test fails, recipient receive, but cc doesn't
    2. Published in Sommelier (SAtelier's Windows server)

2024-06-03..04 v α45
    1. Send email with CC mgd (testing) when data_validate
    2. Confirm if run.bat exists
    3. New Cargo object ModulesConfig.py

----------- 2024 - May -----------
----------------------------------
2024-05-30 v α44
    1. Fix several minor bugs on the authentication process html.j2 files
    2. Disable the submit button after it is pressed.
    3. use `<form action= {rout#} ..> instead of <button onclick = 'location.href = {route}....
       as should be for Flask apps

2024-05-28 v α43
    1. Give default value of config only when empty !!

2024-05-28 v α42
    1. Remove circular import

2024-05-28 v α41
    1. requirements.txt minimized

2024-05-27 v α40
    1. Versão beta6 do validador
    2. Ajustes data_validate para que rode sem problemas:
        2.1 text_html, substituir asc > 126 por &entity;
            para evitar erro em:
            save_html_pdf_report: template = self.env.get_template(self.template_name)
        2.2 text_html tem um script sem fechas </script>
            para evitar erro em:
            gera_pdf
        2.3 `coverage` não está no requirements.txt
    3. Ajustes para o servidor (circular import)


2024-05-25 v α39
    1. Ajustes para o servidor

2024-05-22--25 v α38
    1. Modularizar o processo de validação, ver .private/upload_file/process.py
    2. Versão beta5 do validador

2024-05-18--22 v α37 (a)
    1. run.py renomeado a main.py
    2. main.py atualizado
    3. Validação: nova estrutura do folder compartilhado:
        <top-folder>
            |- canoa
            |   |— carranca
            |   |— user_files
            |   |  |— uploaded
            |   |  |— downloaded
            |   |
            |   :
            |
            |— data_validate
            |   |
            |   + run.bat
            |   |
            |
            |— data_tunnel
                |— <user_1>
                |   |— data
                |   |— report
                |— <user_2>
                :

2024-05-18--22 v α37
    1. run.py renomeado a main.py
    2. main.py atualizado
    3. Validação: nova estrutura do folder compartilhado:
        <top-folder>
            |- canoa
            |   |- carranca
            |   |- uploaded_files
            |   :
            |
            |- data_validate
            |   :
            |
            |- data_tunnel
                |- <user_1>
                |   |- data
                |   |- report
                |- <user_2>
                :

2024-05-18--21 v α36
    1. Config.py modernizado,
        a. DebugConfig
        b. ProductionConfig
    2. Módulos atualizados q nova estrutura

2024-05-16--18 v α35
    1. Typo in base.html.j2

2024-05-16--18 v α34
    1. Fim refatoração de (carranca\authentication e carranca\home) a
        > private: usuário tem que estar logado
        > public: não logado
        > templates.private
    2. Blueprint refeito, ver
        *.routes.py
        helpers\route.py bp_public, bp_private
        .__init__.py.register_blueprints
    3. Pasta scripts -> helpers

2024-05-09--16 v α33
    1. Versão beta4 do validador
    2. Refatorar pastas carranca\authentication e carranca\home
        > private: usuário tem que estar logado
        > public: não logado
    3. Banco de Dados renomeado a `canoa`
    4. Blueprint refeito (ver bp_public, bp_private)

2024-05-09 v α32
    1. Versão beta3 do validador

2024-05-09 v α31
    1. Versão beta2 do validador

2024-05-09 v α30
    1. Versão beta do validador

2024-05-08 v α29
    1. Several improvements on UploadFile

2024-05-07 v α28
    1. Teste sem path.txt
    2. Undo apikey

2024-05-06 v α27
    1. Refactoring dos nomes de block em flask de base.html
    2. Primer de upload com validação
    3. Falta limpar aquivos, email e testes

2024-05-06 v α26
    1.Environ vars must start with CANOA_
    2 Forms fixups

2024-05-03 v α25
    1. Renomeado  `apps` -> carranca (font-end da canoa)
    2. Bug no Upload solucionado (somente DB)
       Como zlib.crc32 -> int  (32b)  na tabela e fiz a coluna file_crc::int4
       Mas, na realdade (desde a versão 3), é um uint.
       Ja que em Postgres não tem tipo uint mudei o tipo de dado da coluna: file_crc::bingint
    3. Communication module with 'validate_data' started

2024-05-03 v α24
    1. Renomeado Caatinga -> Canoa
    2. Nova imagem/ favicon


----------- 2024 - April ---------
----------------------------------
2024-04-29,30 v a23
    # Upload File
        1. Criar pasta compartilhada entre Canoa e o validador:
            <root>/shared
        2. Compartilhar os scripts (que acho) necessários para a comunicação `Validador` e Canoa email
            <root>/shared/scripts
        3. Guardar os arquivo na especificada em
            <root>/shared/scripts/config.py
           Agora é:
            <root>/shared/user_data/upload_files
        4. Persistir os dados do arruivo na tabela user_data_files
        5. Criar view com os dados necessários para enviar e-mail com
           o resultado da validação.
    # Mudar texto de Caatinga a Canoa


2024-04-29,30 v a22
    # Criar Classe
         ./apps/caatinga/config.py
         com paths a lugares de upload

2024-04-27,29 v a21
    # Upload File
        1. Formulário, pronto
        2. Recepção, ok
2024-04-16..19,23--26
    # Refatoração do DB
        1. As tabelas foram traduzidas ao ingles.
        2. Criação de índices e relacionamentos.
        3. Modernizar tabela `users`.
    # Novas Tabelas e Views
        1. Criar tabela `roles`.
        2. Criar tabela 'sepcombined_user` que relaciona os sep (vw_sepcombined) com o usuários (users).
        3. Criação de Views a partir de common.schema:
            a. vw_schema -> common.schema
            b. vw_sepcombined (junta as tabelas `sep` de cada db.schema listado na tabela common.schema)
               A view é criada por generate_vw_sepcombined()
            c. vw_ui_texts junta as tabelas com os textos do User Interface (ui_*) para ser usada pelo app
    # Novo Formulário
        1. Inicio do Upload File


2024-04-15
    # Novos documentos: 'Termo de Uso', 'Política de Privacidade' e 'Bem-vindo ao aplicativo Caatinga'
        1. Exibir os documentos
        2. Ajustes vários para melhor exibição
        3. Remover bug que acontece quando o usuário esta logado e abre a pagina de login.

    #  login->login, 'Política de Privacidade' texto completo, 'memoria' para login e register
        1. Não da erro quando o usuário logado tenta logar e novo.
        2. Faltou um segmento do texto Política de Privacidade'
        3. Se na tela de login ou register vai para o documento, perde o já escrito.
        4. Não enviar e-mail ANTES de registrar ao usuário (processo proposto por mgd, negado)


2024-04-09 -- 12
      # Exibir HTML pronto
        1. Criar um alias para el documento HTML derivado do título, eg  `especificacaosetor`
        2. Salvar na tabela textos_grupo.grupo <- alias (antes: suporteusuariogrupo.nome)
        3. Salvar o documento em textos_item.nome HTML em partes: (antes: suporteusuarioelemento.tag)
            - documento.body -> body
            - document.style -> style
            - título do documento -> pageTitle (do tab browser), formTitle (do formulário)
            - lista de imagens (separadas por ,) que estão na tabela texto_item -> images
            - imagem 1 encode64 -> imagem1.png
            * se salvar as imagens diretamente no diretório, `images` pode ser '',
            * O diretório é \static\docs\{alias}\img\*
            * home/routes.py [docs] cuida de:
                - Recreate images from DB when needed and are available
                - Updates url of img tag for the folder in the HTML

2024-04-08
      # Inicio de Imagens para HTML

2024-04-05
      » Backup do db
      » Planejamento de imagens para HTML + HTMLs anônimo/logado

2024-04-04
      # Diálogos e Formulários prontos com cores novas

2024-04-03
      #Atualização de git
      » Remember-me Cookie
      » vw_textos (atualizada)
      » caatinga.css

2024-04-02
      #Formulário das Contas de Usuário revisão 2, novo background
      #Display de documentos HTML (comparte dialog.tmpl com os formulários)

2024-04-01
      #Formulários funcionando, configuráveis

---------- 2024 - March ----------
----------------------------------
2024-03-28
      #Adaptar formulário sem imagem superior, passwordrecovery e resetpassword nao funcionam.

2024-03-27
      # Revisão de segurança e performance: app + db
      » Set default schema for DB (user is not working)
      » Usar users.search_name
      » Trigger para users colunas 'internal' (de procura/where) e manter email <- lower

2024-03-26
      » Ajustar no programa o desenvolvido ontem.

2024-03-25
      » Enviar token pelo email
      » Check if current_user.authentication, every where and checkout logout, refresh
      » *Apresentação N 1*, foi boa sem bugs.
      » Refazer os templates, para ter um em comum com: account.html + displayForm
      » Recriar os usuários do DB para ter:
         1. um super usuário caatinga_power
         2. um grupo: caatinga_users
         3. um usuário para ser connection string
         4. desenvolvedores: mauro + miguel
         5. as permissões concentradas em caatinga_users
      » Trazer os schemas AdaptaBrasil para o nosso banco.
      » Criar indices unique
      » Criar vw_texts para a UI
      » Novas colunas para user: last_password_date, created_at, active e real_name (To display => username)


2024-03-23
      #Login, Registro, Recuperar Senha, ChangePassword e ResetPassword OK! Inicio de /index
      » Renomear forms do processo de recuperação de senha (seguir padrão internacional)
         - getusermail -> passwordrecovery
         - changepassword<token> -> resetpassword/<token>
         - changepassword -> changepassword
      » Criar index com menu *muito* simples:
         - mudar senha
         - importar
         - disclaimer
         - Sobre
         - Sair/Logout
      » Formulários prontos:
        o Sem logar
         - /register
         - /login
         - /passwordrecovery
         - /resetpassword/<token> (de email)
        o Logado
         - /changepassword
         - /logout
         - importar

2024-03-22
      #Login, Registro, Recuperar Senha e ChangePassword (com e sem token) UI funcionando. Loga e desloga.
      » Geral em todos os formulários de autenticação
      » Revisão no wtforms de accounts
      » Novo mgsSuccess ('contrario do msgError'): mostra uma mensagem e so um botão (com link)
      » Registro Ok
      » Login ok
      » Logout OK
      » Change password quando logado, ok
      » getuseremail.html -> requestemail.html


2024-03-21
      #Login, Registro, Recuperar Senha e ChangePassword funcionando na UI, mas falta ChangePassword com Token
      » ChangePassword, fazer token opcional e novo algoritmo (com get/post)
      » ChangePassword.html com token não tem form :-O,  sim token, OK

2024-03-20
   #Login, Registro, Recuperar Senha funcionando na UI (falta changepassword.html)
       » Registro: [ ] Li e ...
       » getuseremail.html
       » msg -> msgError

   #Ajustes, mas changepassword.html ainda não tem 'back form'

2024-03-19
   #new template `documentDisplay.html` & refactoring.
    » Visão geral, documentDisplay.html
   #Login e Registro funcionando na UI (falta [x] Li Termos)
    » Avoid print shadow document.css
    » Create authentication template
    » After login display new "window", import?

---------------------------------- Typical Flask

my_flask_app/
    app.py
    config.py
    requirements.txt
    .gitignore
    app/
        __init__.py
        models.py
        routes.py
        utils.py
        forms.py
        extensions.py
    static/
        css/
        js/
        img/
    templates/
        base.html.j2
        index.html
        ...
uploaded_files/
    file1.txt
    file2.jpg


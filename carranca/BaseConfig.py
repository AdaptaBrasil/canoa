"""
 Equipe da Canoa -- 2024

 Configuration Files for the Application

 mgd 2024-05-06
 mgd 2024-05-21: Base, Debug, Production
 mgd 2024-10-11: new file for BaseConfig, simplify imports
"""

# cSpell:ignore SQLALCHEMY searchpath

from os import path
from flask import Config

from .main import app_name
from .helpers.py_helper import is_str_none_or_empty


CONFIG_MANDATORY_KEYS = ["SQLALCHEMY_DATABASE_URI", "SERVER_ADDRESS", "SECRET_KEY", "APP_MODE"]

# === Available app/config modes, add yours own mode here (extend)
app_mode_production: str = "Production"  # capital P
app_mode_development: str = "Development"  # capital D


# Base Class for App Config
# see https://flask.palletsprojects.com/en/latest/config/ for other attributes
class BaseConfig(Config):
    """
    The Base Configuration Class for the App
    ----------------------------------------

    For the `data_validate` process's
    parameters/configuration see: ./config_upload.py
    """

    """ App Identification
        ----------------------------
    """
    APP_NAME = app_name

    # major.minor.patch
    APP_VERSION = "Î² 2.36"  # &beta;

    """ Internal attributes
        ------------------
    """

    """ Canoa Configurations
        --------------------------
    """
    # see initialize:
    #  several keys are set to APP_PROPAGATE_DEBUG
    #  when it's config value is None
    APP_PROPAGATE_DEBUG = False
    APP_DEBUG = None
    APP_MINIFIED = None  # <- True if APP_PROPAGATE_DEBUG else False
    APP_DISPLAY_DEBUG_MSG = None < -True if APP_PROPAGATE_DEBUG else False
    APP_MODE = "None"  # see below (enum)

    """ Flask Configuration
        --------------------------
    """
    # Flask https://flask.palletsprojects.com/en/latest/config/
    # this must be set individually for each APP_MODE (see config.py)
    DEBUG = None  # <- True if APP_PROPAGATE_DEBUG else False
    TESTING = None  # <- True if APP_PROPAGATE_DEBUG else False
    DEBUG_TEMPLATES = None  # <- True if APP_PROPAGATE_DEBUG else False
    ROOT_FOLDER = path.abspath(path.dirname(__file__))

    SECRET_KEY = ""
    SESSION_COOKIE_NAME = f"{APP_NAME.lower()}"

    # see route_helper.py[is_external_ip_ready]
    EXTERNAL_IP_SERVICE = "https://checkip.amazonaws.com"

    # Registered user on the email API
    EMAIL_ORIGINATOR = "assismauro@hotmail.com"
    # "  with key
    EMAIL_API_KEY = ""  # from os_environment or autogenerated (see below)

    # Sql Alchemy
    SQLALCHEMY_DATABASE_URI = ""  # from os_environment
    SQLALCHEMY_DATABASE_URI_REMOVE_PW_REGEX = r":[^@]+@"
    SQLALCHEMY_DATABASE_URI_REPLACE_PW_STR = ":******@"
    SQLALCHEMY_TRACK_MODIFICATIONS = False

    # Flask Server Address
    SERVER_ADDRESS = ""

    # if left empty, an external service will be used
    # see self.EXTERNAL_IP_SERVICE
    # & ./helpers/route_helper.py[is_external_ip_ready()]
    SERVER_EXTERNAL_IP = ""
    SERVER_EXTERNAL_PORT = ""

# eof
